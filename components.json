"use client";
import {
  Form,
  FormControl,
  FormDescription,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { zodResolver } from "@hookform/resolvers/zod";
import { z } from "zod";
import { useForm } from "react-hook-form";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";

export default function GeneratedForm() {
  const formSchema = z.object({
    "task-title": z.string(),
    "textarea-0": z.string(),
    "button-0": z.string(),
  });

  const form = useForm<z.infer<typeof formSchema>>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      "task-title": "",
      "textarea-0": "",
      "button-0": "",
    },
  });

  function onSubmit(values: z.infer<typeof formSchema>) {
    console.log(values);
  }

  return (
    <Form {...form}>
      <form
        onSubmit={form.handleSubmit(onSubmit)}
        className="space-y-8 @container"
      >
        <div className="grid grid-cols-12 gap-4">
          <FormField
            control={form.control}
            name="task-title"
            render={({ field }) => (
              <FormItem className="col-span-12 col-start-auto flex flex-col gap-2 space-y-0 items-start">
                <FormLabel className="flex shrink-0">Task Title</FormLabel>

                <div className="w-full">
                  <FormControl>
                    <Input
                      key="text-input-0"
                      placeholder="Enter the Task Title"
                      type="text"
                      id="task-title"
                      className=""
                      {...field}
                    />
                  </FormControl>

                  <FormMessage />
                </div>
              </FormItem>
            )}
          />
        </div>
        <div className="grid grid-cols-12 gap-4">
          <FormField
            control={form.control}
            name="textarea-0"
            render={({ field }) => (
              <FormItem className="col-span-12 col-start-auto flex flex-col gap-2 space-y-0 items-start">
                <FormLabel className="flex shrink-0">
                  Description (optional)
                </FormLabel>

                <div className="w-full">
                  <FormControl>
                    <Textarea
                      key="textarea-0"
                      id="textarea-0"
                      placeholder="Enter the Task Description"
                      className=""
                      {...field}
                    />
                  </FormControl>

                  <FormMessage />
                </div>
              </FormItem>
            )}
          />
        </div>
        <div className="grid grid-cols-12 gap-4">
          <FormField
            control={form.control}
            name="button-0"
            render={({ field }) => (
              <FormItem className="col-span-12 col-start-auto flex flex-col gap-2 space-y-0 items-start">
                <FormLabel className="hidden shrink-0">Submit</FormLabel>

                <div className="w-full">
                  <FormControl>
                    <Button
                      key="button-0"
                      id="button-0"
                      name=""
                      className="w-full"
                    >
                      Submit
                    </Button>
                  </FormControl>

                  <FormMessage />
                </div>
              </FormItem>
            )}
          />
        </div>
      </form>
    </Form>
  );
}
